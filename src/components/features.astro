

<div class="
    py-24
    px-12
    md:px-24
    mx-auto
    max-w-[90rem]
    grid
    grid-cols-1
    md:grid-cols-2
    gap-x-24
    gap-y-16
    text-gray-800 
    dark:text-gray-200
    
">
    
    <div class="   
        grid
        grid-cols-[min-content_minmax(0,1fr)]
        grid-rows-[min-content_min-content]  
        
        "
    >
        <svg class="
            fill-blue-500
            dark:fill-blue-400
            mr-4
            "
            xmlns="http://www.w3.org/2000/svg" 
            width="24" 
            height="24" 
            viewBox="0 0 24 24"
        >
        <path d="M19 8h-3V5c0-1.103-.897-2-2-2H5c-1.103 0-2 .897-2 2v9c0 1.103.897 2 2 2h3v3c0 1.103.897 2 2 2h9c1.103 0 2-.897 2-2v-9c0-1.103-.897-2-2-2zm-4 7H9V9h6v6z"></path>
        </svg>


        <h3 class="
            dark:text-gray-100
            font-bold
            text-xl
            pb-6
            "
        >
            Full C ABI Compatibility
        </h3>
        <p class="col-start-2">
            C3 fits right into your C/C++ application with full C ABI
            compatibility out of the box: no need for special "C compatible"
            types or functions, no limitations on what C3 features you can use
            from C.
        </p>
    </div>


    <div class="   
        grid
        grid-cols-[min-content_minmax(0,1fr)]
        grid-rows-[min-content_min-content]  
        "
    >
        <svg class="
            fill-blue-500
            dark:fill-blue-400
            mr-4
            "
            xmlns="http://www.w3.org/2000/svg" 
            width="24" 
            height="24" 
            viewBox="0 0 24 24"
        >
        <path d="M21.993 7.95a.96.96 0 0 0-.029-.214c-.007-.025-.021-.049-.03-.074-.021-.057-.04-.113-.07-.165-.016-.027-.038-.049-.057-.075-.032-.045-.063-.091-.102-.13-.023-.022-.053-.04-.078-.061-.039-.032-.075-.067-.12-.094-.004-.003-.009-.003-.014-.006l-.008-.006-8.979-4.99a1.002 1.002 0 0 0-.97-.001l-9.021 4.99c-.003.003-.006.007-.011.01l-.01.004c-.035.02-.061.049-.094.073-.036.027-.074.051-.106.082-.03.031-.053.067-.079.102-.027.035-.057.066-.079.104-.026.043-.04.092-.059.139-.014.033-.032.064-.041.1a.975.975 0 0 0-.029.21c-.001.017-.007.032-.007.05V16c0 .363.197.698.515.874l8.978 4.987.001.001.002.001.02.011c.043.024.09.037.135.054.032.013.063.03.097.039a1.013 1.013 0 0 0 .506 0c.033-.009.064-.026.097-.039.045-.017.092-.029.135-.054l.02-.011.002-.001.001-.001 8.978-4.987c.316-.176.513-.511.513-.874V7.998c0-.017-.006-.031-.007-.048zm-10.021 3.922L5.058 8.005 7.82 6.477l6.834 3.905-2.682 1.49zm.048-7.719L18.941 8l-2.244 1.247-6.83-3.903 2.153-1.191zM13 19.301l.002-5.679L16 11.944V15l2-1v-3.175l2-1.119v5.705l-7 3.89z"></path>
        </svg>


        <h3 class="
            dark:text-gray-100
            font-bold
            text-xl
            pb-6
            "
        >
            Module System
        </h3>
        <p class="col-start-2">
            A simple and straightforward module system that doesn't get in the
            way, with sane defaults.
        </p>
        </div>


    <div class="   
        grid
        grid-cols-[min-content_minmax(0,1fr)]
        grid-rows-[min-content_min-content]  
        
        "
    >
        <svg class="
            fill-blue-500
            dark:fill-blue-400
            mr-4
            "
            xmlns="http://www.w3.org/2000/svg" 
            width="24" 
            height="24" 
            viewBox="0 0 24 24"
        >
            <path d="M22 8a.76.76 0 0 0 0-.21v-.08a.77.77 0 0 0-.07-.16.35.35 0 0 0-.05-.08l-.1-.13-.08-.06-.12-.09-9-5a1 1 0 0 0-1 0l-9 5-.09.07-.11.08a.41.41 0 0 0-.07.11.39.39 0 0 0-.08.1.59.59 0 0 0-.06.14.3.3 0 0 0 0 .1A.76.76 0 0 0 2 8v8a1 1 0 0 0 .52.87l9 5a.75.75 0 0 0 .13.06h.1a1.06 1.06 0 0 0 .5 0h.1l.14-.06 9-5A1 1 0 0 0 22 16V8zm-10 3.87L5.06 8l2.76-1.52 6.83 3.9zm0-7.72L18.94 8 16.7 9.25 9.87 5.34zM4 9.7l7 3.92v5.68l-7-3.89zm9 9.6v-5.68l3-1.68V15l2-1v-3.18l2-1.11v5.7z"></path>
        </svg>


        <h3 class="
            dark:text-gray-100
            font-bold
            text-xl
            pb-6
            "
        >
            Generic modules
        </h3>
        <p class="col-start-2">
            C3 generic modules offer superior simplicity and clarity for
            creating generic types.
        </p>
    </div>

    <div class="   
        grid
        grid-cols-[min-content_minmax(0,1fr)]
        grid-rows-[min-content_min-content]  
        "
    >
        <svg class="
            fill-blue-500
            dark:fill-blue-400
            mr-4
            "
            xmlns="http://www.w3.org/2000/svg" 
            width="24" 
            height="24" 
            viewBox="0 0 24 24"
        >
            <path d="M6 14c-2.206 0-4 1.794-4 4s1.794 4 4 4a4.003 4.003 0 0 0 3.998-3.98H10V16h4v2.039h.004A4.002 4.002 0 0 0 18 22c2.206 0 4-1.794 4-4s-1.794-4-4-4h-2v-4h2c2.206 0 4-1.794 4-4s-1.794-4-4-4-4 1.794-4 4v2h-4V5.98h-.002A4.003 4.003 0 0 0 6 2C3.794 2 2 3.794 2 6s1.794 4 4 4h2v4H6zm2 4c0 1.122-.879 2-2 2s-2-.878-2-2 .879-2 2-2h2v2zm10-2c1.121 0 2 .878 2 2s-.879 2-2 2-2-.878-2-2v-2h2zM16 6c0-1.122.879-2 2-2s2 .878 2 2-.879 2-2 2h-2V6zM6 8c-1.121 0-2-.878-2-2s.879-2 2-2 2 .878 2 2v2H6zm4 2h4v4h-4v-4z"></path>
        </svg>


        <h3 class="
            dark:text-gray-100
            font-bold
            text-xl
            pb-6
            "
        >
            Semantic Macros
        </h3>
        <p class="col-start-2">
            Macros that are just as easy to read and write as regular functions.
            Packing much more power than C's preprocessor, they're deliberately
            balanced to ensure that code reading isn't made difficult.
        </p>
    </div>


    


    <div class="   
        grid
        grid-cols-[min-content_minmax(0,1fr)]
        grid-rows-[min-content_min-content]  
        "
    >
        <svg class="
            fill-blue-500
            dark:fill-blue-400
            mr-4
            "
            xmlns="http://www.w3.org/2000/svg" 
            width="24" 
            height="24" 
            viewBox="0 0 24 24"
        >
            <path d="M10 11H7.101l.001-.009a4.956 4.956 0 0 1 .752-1.787 5.054 5.054 0 0 1 2.2-1.811c.302-.128.617-.226.938-.291a5.078 5.078 0 0 1 2.018 0 4.978 4.978 0 0 1 2.525 1.361l1.416-1.412a7.036 7.036 0 0 0-2.224-1.501 6.921 6.921 0 0 0-1.315-.408 7.079 7.079 0 0 0-2.819 0 6.94 6.94 0 0 0-1.316.409 7.04 7.04 0 0 0-3.08 2.534 6.978 6.978 0 0 0-1.054 2.505c-.028.135-.043.273-.063.41H2l4 4 4-4zm4 2h2.899l-.001.008a4.976 4.976 0 0 1-2.103 3.138 4.943 4.943 0 0 1-1.787.752 5.073 5.073 0 0 1-2.017 0 4.956 4.956 0 0 1-1.787-.752 5.072 5.072 0 0 1-.74-.61L7.05 16.95a7.032 7.032 0 0 0 2.225 1.5c.424.18.867.317 1.315.408a7.07 7.07 0 0 0 2.818 0 7.031 7.031 0 0 0 4.395-2.945 6.974 6.974 0 0 0 1.053-2.503c.027-.135.043-.273.063-.41H22l-4-4-4 4z"></path>
        </svg>


        <h3 class="
            dark:text-gray-100
            font-bold
            text-xl
            pb-6
            "
        >
            Runtime and compile reflection
        </h3>
        <p class="col-start-2">
            Type introspection is available both at compile time and runtime,
            powering flexible macros and functions
        </p>
    </div>



    <div class="   
        grid
        grid-cols-[min-content_minmax(0,1fr)]
        grid-rows-[min-content_min-content]  
        
        "
    >
        <svg class="
            fill-blue-500
            dark:fill-blue-400
            mr-4
            "
            xmlns="http://www.w3.org/2000/svg" 
            width="24" 
            height="24" 
            viewBox="0 0 24 24"
        >
            <path d="M8.293 6.293 2.586 12l5.707 5.707 1.414-1.414L5.414 12l4.293-4.293zm7.414 11.414L21.414 12l-5.707-5.707-1.414 1.414L18.586 12l-4.293 4.293z"></path>
        </svg>


        <h3 class="
            dark:text-gray-100
            font-bold
            text-xl
            pb-6
            "
        >
            Inline Assembly
        </h3>
        <p class="col-start-2">
            Write asm as regular inline code without using strings or cryptic
            constraints.
        </p>
    </div>


    <div class="   
        grid
        grid-cols-[min-content_minmax(0,1fr)]
        grid-rows-[min-content_min-content]  
        "
    >
        <svg class="
            fill-blue-500
            dark:fill-blue-400
            mr-4
            "
            xmlns="http://www.w3.org/2000/svg" 
            width="24" 
            height="24" 
            viewBox="0 0 24 24"
        >
            <path d="M10 4V2H4v20h6v-2H6V4zm4 16v2h6V2h-6v2h4v16z"></path>
        </svg>


        <h3 class="
            dark:text-gray-100
            font-bold
            text-xl
            pb-6
            "
        >
            Built-in slices and slicing
        </h3>
        <p class="col-start-2">
            Slices are type safe "pointer + length" types which natively
            supports copying and comparison.
        </p>
    </div>

    <div class="   
        grid
        grid-cols-[min-content_minmax(0,1fr)]
        grid-rows-[min-content_min-content]  
        "
    >
        <svg class="
            fill-blue-500
            dark:fill-blue-400
            mr-4
            "
            xmlns="http://www.w3.org/2000/svg" 
            width="24" 
            height="24" 
            viewBox="0 0 24 24"
        >
        <path d="M11.587 6.999H7.702a2 2 0 0 0-1.88 1.316l-3.76 10.342c-.133.365-.042.774.232 1.049l.293.293 6.422-6.422c-.001-.026-.008-.052-.008-.078a1.5 1.5 0 1 1 1.5 1.5c-.026 0-.052-.007-.078-.008l-6.422 6.422.293.293a.997.997 0 0 0 1.049.232l10.342-3.761a2 2 0 0 0 1.316-1.88v-3.885L19 10.414 13.586 5l-1.999 1.999zm8.353 2.062-5-5 2.12-2.121 5 5z"></path>
        </svg>


        <h3 class="
            dark:text-gray-100
            font-bold
            text-xl
            pb-6
            "
        >
            Gradual Contracts
        </h3>
        <p class="col-start-2">
            C3 brings programming-by-contract to the mainstream with
            unobtrusive contracts that are used to express both runtime and
            compile-time constraints.
        </p>
    </div>
   
    <div class="   
        grid
        grid-cols-[min-content_minmax(0,1fr)]
        grid-rows-[min-content_min-content]  
        "
    >
        <svg class="
            fill-blue-500
            dark:fill-blue-400
            mr-4
            "
            xmlns="http://www.w3.org/2000/svg" 
            width="24" 
            height="24" 
            viewBox="0 0 24 24"
        >
            <path d="M11 6h2v5h-2zm0 6h2v2h-2z"></path>
            <path d="M20 2H4c-1.103 0-2 .897-2 2v18l5.333-4H20c1.103 0 2-.897 2-2V4c0-1.103-.897-2-2-2zm0 14H6.667L4 18V4h16v12z"></path>
        </svg>


        <h3 class="
            dark:text-gray-100
            font-bold
            text-xl
            pb-6
            "
        >
            Zero Overhead Errors
        </h3>
        <p class="col-start-2">
            Error handling that combines the best parts of "Result" errors
            with the easy use of exceptions and integrates seamlessly with C.
        </p>
    </div>


    <div class="   
        grid
        grid-cols-[min-content_minmax(0,1fr)]
        grid-rows-[min-content_min-content]  
        
        "
    >
        <svg class="
            fill-blue-500
            dark:fill-blue-400
            mr-4
            "
            xmlns="http://www.w3.org/2000/svg" 
            width="24" 
            height="24" 
            viewBox="0 0 24 24"
        >
            <path d="M6.787 7h10.426c-.108-.158-.201-.331-.318-.481l2.813-2.812-1.414-1.414-2.846 2.846a6.575 6.575 0 0 0-.723-.454 5.778 5.778 0 0 0-5.45 0c-.25.132-.488.287-.722.453L5.707 2.293 4.293 3.707l2.813 2.812c-.118.151-.21.323-.319.481zM5.756 9H2v2h2.307c-.065.495-.107.997-.107 1.5 0 .507.042 1.013.107 1.511H2v2h2.753c.013.039.021.08.034.118.188.555.421 1.093.695 1.6.044.081.095.155.141.234l-2.33 2.33 1.414 1.414 2.11-2.111a7.477 7.477 0 0 0 2.068 1.619c.479.253.982.449 1.496.58.204.052.411.085.618.118V16h2v5.914a6.23 6.23 0 0 0 .618-.118 6.812 6.812 0 0 0 1.496-.58c.465-.246.914-.55 1.333-.904.258-.218.5-.462.734-.716l2.111 2.111 1.414-1.414-2.33-2.33c.047-.08.098-.155.142-.236.273-.505.507-1.043.694-1.599.013-.039.021-.079.034-.118H22v-2h-2.308c.065-.499.107-1.004.107-1.511 0-.503-.042-1.005-.106-1.5H22V9H5.756z"></path>
        </svg>


        <h3 class="
            dark:text-gray-100
            font-bold
            text-xl
            pb-6
            "
        >
            Debug with safety checks
        </h3>
        <p class="col-start-2">
            Feel confident in your code's correctness: in debug mode the
            compiler inserts extensive runtime bounds checks and value checks,
            which together with contracts will let you catch bugs early.
        </p>
    </div>


    <div class="   
        grid
        grid-cols-[min-content_minmax(0,1fr)]
        grid-rows-[min-content_min-content]  
        
        "
    >
        <svg class="
            fill-blue-500
            dark:fill-blue-400
            mr-4
            "
            xmlns="http://www.w3.org/2000/svg" 
            width="24" 
            height="24" 
            viewBox="0 0 24 24"
        >
            <path d="M12 10c3.976 0 8-1.374 8-4s-4.024-4-8-4-8 1.374-8 4 4.024 4 8 4z"></path>
            <path d="M4 10c0 2.626 4.024 4 8 4s8-1.374 8-4V8c0 2.626-4.024 4-8 4s-8-1.374-8-4v2z"></path>
            <path d="M4 14c0 2.626 4.024 4 8 4s8-1.374 8-4v-2c0 2.626-4.024 4-8 4s-8-1.374-8-4v2z"></path>
            <path d="M4 18c0 2.626 4.024 4 8 4s8-1.374 8-4v-2c0 2.626-4.024 4-8 4s-8-1.374-8-4v2z"></path>
        </svg>


        <h3 class="
            dark:text-gray-100
            font-bold
            text-xl
            pb-6
            "
        >
            Detailed stacktraces
        </h3>
        <p class="col-start-2">
            No more anonymous "segmentation fault" errors: the C3 standard
            library enables detailed stacktraces out of the box for your debug
            builds.
        </p>
    </div>


</div>